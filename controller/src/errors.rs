pub const ERROR_NON_WHITELISTED_MARKET: &[u8] = b"not a whitelisted money market";
pub const ERROR_INVALID_MONEY_MARKET_SC: &[u8] = b"invalid money market smart contract";
pub const ERROR_INVALID_ORACLE_SC: &[u8] = b"invalid price oracle smart contract";
pub const ERROR_ALREADY_SUPPORTED_MARKET: &[u8] = b"the provided money market has been already supported";
pub const ERROR_MISSING_CLOSE_FACTOR: &[u8] = b"missing close factor";
pub const ERROR_MISSING_LIQUIDATION_INCENTIVE: &[u8] = b"missing liquidation incentive";
pub const ERROR_REACHED_LIQUIDITY_CAP: &[u8] = b"reached market liquidity cap";
pub const ERROR_REACHED_BORROW_CAP: &[u8] = b"reached market borrow cap";
pub const ERROR_ONLY_ADMIN: &[u8] = b"only admin allowed";
pub const ERROR_ONLY_ADMIN_OR_GUARDIAN: &[u8] = b"only admin or guardian allowed";
pub const ERROR_ONLY_ADMIN_OR_REWARDS_MANAGER: &[u8] = b"only admin or rewards manager allowed";
pub const ERROR_ONLY_MONEY_MARKET_CAN_BURN: &[u8] = b"money market can only burn its own tokens";
pub const ERROR_ONLY_MONEY_MARKET_CAN_TRANSFER: &[u8] = b"money market can only transfer its own tokens";
pub const ERROR_ONLY_MONEY_MARKET_CALLER: &[u8] = b"caller must be the money market";
pub const ERROR_ADDRESSES_MUST_DIFFER: &[u8] = b"addresses must be different";
pub const ERROR_CANNOT_BE_ADDRESS_ZERO: &[u8] = b"cannot be address zero";
pub const ERROR_TOO_MANY_MARKETS: &[u8] = b"cannot enter market, too many markets";
pub const ERROR_MAX_MARKETS_TOO_HIGH: &[u8] = b"maximum number of markets per account too high";
pub const ERROR_MAX_MARKETS_TOO_LOW: &[u8] = b"maximum number of markets per account too low";
pub const ERROR_COLLATERAL_FACTOR_TOO_HIGH: &[u8] = b"collateral factor too high";
pub const ERROR_USH_BORROWER_COLLATERAL_FACTOR_TOO_HIGH: &[u8] = b"USH borrower collateral factor too high";
pub const ERROR_COLLATERAL_FACTOR_TOO_LOW: &[u8] = b"collateral factor too low";
pub const ERROR_EXCEEDED_MAXIMUM_DECREASE: &[u8] = b"exceeded maximum collateral factor decrease";
pub const ERROR_NO_COLLATERAL: &[u8] = b"requester has no collateral";
pub const ERROR_INSUFFICIENT_COLLATERAL: &[u8] = b"requester has insufficient collateral";
pub const ERROR_INSUFFICIENT_BALANCE: &[u8] = b"insufficient balance in protocol";
pub const ERROR_INSUFFICIENT_REWARDS_BALANCE: &[u8] = b"not enough rewards token balance";
pub const ERROR_INSUFFICIENT_BOOSTED_REWARDS_BALANCE: &[u8] = b"not enough boosted rewards token balance";
pub const ERROR_REQUESTER_RISKY_OR_INSOLVENT: &[u8] = b"requester would become either risky or insolvent";
pub const ERROR_MINT_PAUSED: &[u8] = b"mint is paused";
pub const ERROR_BORROW_PAUSED: &[u8] = b"borrow is paused";
pub const ERROR_SEIZE_PAUSED: &[u8] = b"seize is paused";
pub const ERROR_GLOBAL_SEIZE_PAUSED: &[u8] = b"global seize is paused";
pub const ERROR_NOT_ENOUGH_COLLATERAL_REDEEMER: &[u8] = b"redeemer does not have sufficient collateral balance";
pub const ERROR_REPAYMENT_EXCEEDS_TOTAL_BORROW: &[u8] = b"cannot repay more than the total borrow";
pub const ERROR_TOO_MUCH_REPAYMENT: &[u8] = b"exceeded maximum repayment amount";
pub const ERROR_ORACLE_FAILED_RETRIEVE_UNDERLYING_PRICE: &[u8] = b"oracle failed to retrieve the underlying price";
pub const ERROR_ORACLE_NOT_INITIALIZED: &[u8] = b"oracle has not been initialized";
pub const ERROR_AMOUNT_MUST_BE_GREATER_THAN_ZERO: &[u8] = b"amount has to be greater than zero";
pub const ERROR_MAX_REWARDS_BATCHES_TOO_HIGH: &[u8] = b"maximum amount of rewards batches per money market too high";
pub const ERROR_MAX_REWARDS_BATCHES_TOO_LOW: &[u8] = b"maximum amount of rewards batches per money market too low";
pub const ERROR_TOO_MANY_REWARDS_BATCHES: &[u8] = b"too many rewards batches";
pub const ERROR_INVALID_REWARDS_BATCH_ID: &[u8] = b"invalid rewards batch identifier";
pub const ERROR_INVALID_REWARDS_TOKEN_ID: &[u8] = b"invalid rewards token identifier";
pub const ERROR_INVALID_PAYMENT: &[u8] = b"invalid payment";
pub const ERROR_INVALID_COLLATERAL: &[u8] = b"invalid collateral";
pub const ERROR_UNEXPECTED_REWARDS_BATCH_SPEED: &[u8] = b"unexpected rewards batch speed";
pub const ERROR_UNEXPECTED_REWARDS_BATCH_PERIOD: &[u8] = b"unexpected rewards batch period";
pub const ERROR_ZERO_REWARDS_BATCH_SPEED: &[u8] = b"rewards batch speed has to be greater than zero";
pub const ERROR_ZERO_REWARDS_BATCH_PERIOD: &[u8] = b"rewards batch period has to be greater than zero";
pub const ERROR_REWARDS_BATCH_TOLERANCE_OUT_OF_RANGE: &[u8] = b"rewards batch tolerance out of range";
pub const ERROR_REWARDS_BATCH_EXPIRED: &[u8] = b"rewards batch has already expired";
pub const ERROR_REWARDS_BATCH_NOT_EXPIRED: &[u8] = b"rewards batch has not expired yet";
pub const ERROR_REWARDS_NOT_FULLY_DISTRIBUTED: &[u8] = b"rewards batch not fully distributed";
pub const ERROR_BOOSTING_NOT_ACTIVE: &[u8] = b"boosting is not active";
pub const ERROR_INVALID_SWAP_AMOUNT: &[u8] = b"invalid swap amount";
pub const ERROR_INVALID_SWAP_PATH: &[u8] = b"invalid swap path";
pub const ERROR_UNEXPECTED_SWAP_AMOUNT: &[u8] = b"unexpected swap amount";
pub const ERROR_ROUTER_NOT_INITIALIZED: &[u8] = b"router has not been initialized";
pub const ERROR_REWARDS_TOKEN_ALREADY_BOOSTED: &[u8] = b"rewards token already boosted";
pub const ERROR_MAX_SLIPPAGE_TOO_HIGH: &[u8] = b"maximum slippage too high";
pub const ERROR_EXPECTED_SLIPPAGE: &[u8] = b"expected slippage";
pub const ERROR_TOO_MUCH_SLIPPAGE: &[u8] = b"too much slippage";
pub const ERROR_INVALID_PREMIUM: &[u8] = b"invalid premium";
pub const ERROR_BOOST_NOT_ALLOWED: &[u8] = b"boosting is not allowed";
pub const ERROR_REWARDS_BATCH_BOOST_NOT_ENABLED: &[u8] = b"rewards batch boost is not enabled";
pub const ERROR_UNEXPECTED_MIN_AMOUNT_OUT: &[u8] = b"unexpected minimum amount out";
pub const ERROR_MIN_AMOUNT_OUT_NOT_REACHED: &[u8] = b"minimum amount out not reached";
pub const ERROR_INVALID_REWARDS_BOOSTER_SC: &[u8] = b"invalid rewards booster smart contract";
pub const ERROR_INVALID_BOOSTER_VERSION: &[u8] = b"invalid rewards booster version";
pub const ERROR_REWARDS_BOOSTER_ALREADY_SET: &[u8] = b"rewards booster already set";
pub const ERROR_LEGACY_BOOSTER_OBSERVER: &[u8] = b"legacy rewards booster observer";
pub const ERROR_REWARDS_BOOSTER_UNSET: &[u8] = b"rewards booster unset";
pub const ERROR_REWARDS_BOOSTER_NOT_FINALIZED: &[u8] = b"rewards booster not finalized";
pub const ERROR_INVALID_USH_MARKET_SC: &[u8] = b"invalid USH money market smart contract";
pub const ERROR_USH_MARKET_OBSERVER_ALREADY_SET: &[u8] = b"USH market observer already set";
pub const ERROR_LEGACY_USH_MARKET_OBSERVER: &[u8] = b"legacy USH market observer";
pub const ERROR_USH_MARKET_OBSERVER_UNSET: &[u8] = b"ush market observer unset";
pub const ERROR_USH_MARKET_NOT_FINALIZED: &[u8] = b"ush market not finalized";
pub const ERROR_TOKEN_NOT_BOOSTED: &[u8] = b"token is not boosted";
pub const ERROR_INSUFFICIENT_BOOSTED_REWARDS_BALANCE_LEFT: &[u8] = b"not enough boosted rewards token balance left";
pub const ERROR_INVALID_REWARDS_TOKEN_IDS: &[u8] = b"invalid rewards token identifiers";
